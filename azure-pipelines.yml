# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: security
  displayName: Snyk Security Scan
  jobs:
  - job:
    steps:
    - task: SnykSecurityScan@1
      inputs:
        serviceConnectionEndpoint: 'Snyk'
        testType: 'app'
        monitorWhen: 'always'
        failOnIssues: false
        projectName: 'T2'
        organization: 'c60c0b73-b647-496b-874f-f4487ef9d092'
- stage: build
  dependsOn: security
  displayName: Build Artifact
  jobs:
  - job:
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
    - bash: 'cd $(Build.SourcesDirectory)/target && ls -la'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/target'
        artifactName: 'war'
        artifactType: 'pipeline'
- stage:
  dependsOn: build
  displayName: Publish Artifact
  jobs:
    - job:
      steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          source: 'current'
          artifact: 'war'
          path: '$(Build.ArtifactStagingDirectory)'
      - bash: 'cd $(Build.ArtifactStagingDirectory) && ls -la'
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'webapp'
